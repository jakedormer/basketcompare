from django.conf import settings
print(settings.BASE_DIR)

// Open python shell
python manage.py shell


// Create user profile for x

from products.models import Profile, Product
from django.contrib.auth.models import User
jake = User.objects.get(username="jake")
jake_profile = Profile.objects.create(user=jake)

p1 = Product.objects.get(bc_sku=172483)
jake.profile.favourites.all()


//Git

git status
git add .       file.name
git commit
git push origin master

*Check for all remote repositories
git remote -v

* Start Heroku locally
heroku local web -f Procfile.windows


**** Migrations Order for Heroku ****
1. (add/modify some someapp/models.py)
2. python manage.py makemigrations someapp
3. python manage.py migrate
4. git add someapp/migrations/*.py (to add the new migration file)
5. git commit -m "added migration for app someapp"
6. git push heroku
7. heroku run python manage.py migrate


Git Remove Directory and Files
git rm -r --cached folder * make sure you are in src.

heroku config:set DJANGO_SETTINGS_MODULE=basketcompare.settings.production

So if you are trying to ignore this file after the initial commit, run this: git rm --cached settings.py, and you should be good to go.


If making a change to a static file.
1) Collectstatic on local
2) Push to git.


How to solve this cunty error
"Missing staticfiles manifest entry for 'css/favourites.css'"
Same as below. Fucking annoying.

How to get fucking static to update on heroku
delete all css for /staticfiles. Run collectstatic. Push to heroku.


<!-- {% static "" as base_url %} -->

<!-- <td class="merchant-logo"><img class="d-block mx-auto mb-1 shadow-sm" src="{{ base_url }}media/merchant_logos/{{ item.merchant}}.png" height=70 width=70> -->

python manage.py createsuperuser

When you need to install dependencies from a pipfile, use "pipenv install"


For when you want to use the shell

python manaage.py shell

from products.models import *
from django.db import connection

user = User.objects.get(username="jake")

To do list:
1) Pivot table
2) Scrapers automated in heroku
3) Product images on amazon
4) category images on amazon s3
5) match file storage
6) New matching and seed product creation
7) 

